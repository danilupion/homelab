{{- $app := index .Values .Chart.Name }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-app
  labels:
    app: {{ .Chart.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      initContainers:
        - name: create-config-dir
          image: busybox
          command: [ 'sh', '-c', 'chown {{ include "service.value" (dict "context" . "prop" "uid") | int }}:{{ include "service.value" (dict "context" . "prop" "gid") | int }} /configRoot && chmod 700 /configRoot' ]
          volumeMounts:
            - name: config-root
              mountPath: /configRoot
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ $app.image.repository }}:{{ $app.image.tag }}"
          imagePullPolicy: {{ $app.image.pullPolicy | default "IfNotPresent" }}
          env:
            - name: PUID
              value: "{{ include "service.value" (dict "context" . "prop" "uid") | int }}"
            - name: PGID
              value: "{{ include "service.value" (dict "context" . "prop" "gid") | int }}"
            - name: TZ
              value: {{ include "service.value" (dict "context" . "prop" "tz") | quote }}
          ports:
            {{- range (index .Values .Chart.Name).ports }}
            - containerPort: {{ .port }}
              protocol: {{ default "TCP" .protocol }}
            {{- end }}
          volumeMounts:
            - name: config-root
              mountPath: /config

        {{- if (index .Values .Chart.Name "socks5" "enabled") }}
        - name: socks5-sidecar
          image: alpine:latest
          command:
            - /bin/sh
            - -c
            - |
              apk add --no-cache openssh-client && \
              mkdir -p /root/.ssh && \
              cp /ssh-keys/{{ (index .Values .Chart.Name "socks5" "secret-key") }} /root/.ssh/id_rsa && \
              chmod 600 /root/.ssh/id_rsa && \
              ssh -o StrictHostKeyChecking=no \
                  -o ServerAliveInterval=60 \
                  -N -D 0.0.0.0:{{ (index .Values .Chart.Name "socks5" "port") }} \
                  {{ (index .Values .Chart.Name "socks5" "user") }}@{{ (index .Values .Chart.Name "socks5" "host") }};
          volumeMounts:
            - name: ssh-keys
              mountPath: /ssh-keys
              readOnly: true
        {{- end }}
      volumes:
        - name: config-root
          hostPath:
            type: DirectoryOrCreate
            path: {{ required "A value for paths.configRoot is required" .Values.paths.configRoot }}/{{ .Chart.Name }}
        {{- if and (index .Values .Chart.Name "socks5" "enabled") }}
        - name: ssh-keys
          secret:
            secretName: {{ (index .Values .Chart.Name "socks5" "secret") }}
            items:
              - key: {{ (index .Values .Chart.Name "socks5" "secret-key") }}
                path: {{ (index .Values .Chart.Name "socks5" "secret-key") }}
        {{- end }}