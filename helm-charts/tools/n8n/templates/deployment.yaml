{{- $app := index .Values .Chart.Name }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-app
  labels:
    app: {{ .Chart.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      initContainers:
        - name: create-config-dir
          image: busybox
          command: [ 'sh', '-c', 'chown {{ include "service.value" (dict "context" . "prop" "uid") | int }}:{{ include "service.value" (dict "context" . "prop" "gid") | int }} /configRoot && chmod 700 /configRoot' ]
          volumeMounts:
            - name: config-root
              mountPath: /configRoot
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ $app.image.repository }}:{{ $app.image.tag }}"
          imagePullPolicy: {{ $app.image.pullPolicy | default "IfNotPresent" }}
          securityContext:
            runAsUser: {{ include "service.value" (dict "context" . "prop" "uid") | int }}
            runAsGroup: {{ include "service.value" (dict "context" . "prop" "gid") | int }}
          env:
            - name: GENERIC_TIMEZONE
              value: {{ required "A value for tz is required" .Values.tz | quote }}
            - name: TZ
              value: {{ required "A value for tz is required" .Values.tz | quote }}
          ports:
            {{- range (index .Values .Chart.Name).ports }}
            - containerPort: {{ .port }}
              protocol: {{ default "TCP" .protocol }}
            {{- end }}
          volumeMounts:
            - name: config-root
              mountPath: /home/node/.n8n
      volumes:
        - name: config-root
          hostPath:
            type: DirectoryOrCreate
            path: {{ required "A value for paths.configRoot is required" .Values.paths.configRoot }}/{{ .Chart.Name }}