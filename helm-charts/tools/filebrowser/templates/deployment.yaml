{{- $app := index .Values .Chart.Name }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-app
  labels:
    app: {{ .Chart.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      initContainers:
        - name: create-config-dir
          image: busybox
          securityContext:
            runAsUser: {{ include "service.value" (dict "context" . "prop" "uid") | int }}
            runAsGroup: {{ include "service.value" (dict "context" . "prop" "gid") | int }}
          command: ['sh', '-c', 'mkdir -p /configRoot/{{ .Chart.Name }} && chmod 700 /configRoot/{{ .Chart.Name }}']
          volumeMounts:
            - name: config-root
              mountPath: /configRoot
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ $app.image.repository }}:{{ $app.image.tag }}"
          imagePullPolicy: {{ $app.image.pullPolicy | default "IfNotPresent" }}
          env:
          - name: PUID
            value: "{{ include "service.value" (dict "context" . "prop" "uid") | int }}"
          - name: PGID
            value: "{{ include "service.value" (dict "context" . "prop" "gid") | int }}"
          - name: TZ
            value: {{ include "service.value" (dict "context" . "prop" "tz") | quote }}
          ports:
            {{- range (index .Values .Chart.Name).ports }}
            - containerPort: {{ .port }}
              protocol: {{ default "TCP" .protocol }}
            {{- end }}
          volumeMounts:
            - name: config-root
              mountPath: /config
              subPath: {{ .Chart.Name }}
            - name: config-root
              mountPath: /database.db
              subPath: "{{ .Chart.Name }}/data/filebrowser.db"
            - name: config-root
              mountPath: /.filebrowser.json
              subPath: "{{ .Chart.Name }}/.filebrowser.json"
            - name: root
              mountPath: /srv
      volumes:
        - name: config-root
          hostPath:
            path: {{ required "A value for paths.configRoot is required" .Values.paths.configRoot }}
        - name: root
          hostPath:
            path: {{ required "A value for paths.{{ .Chart.Name }}.configRoot is required" (index .Values .Chart.Name "root") }}