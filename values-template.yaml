ip:
uid: 1000
gid: 1000
tz: Europe/Madrid
domain:

# Paths used by the applications
paths:
  configRoot:
  mediaPaths:
    downloads:
    # - name: downloads
    #   path: /mnt/Downloads
    movies:
    # - name: movies1
    #   path: /mnt/movies1
    #   localize: true
    # - name: movies2
    #   path: /mnt/movies2
    #   localize: true
    tv:
    # - name: tv
    #   path: /mnt/tv
    #   localize: true
    music:
    # - name: music1
    #   path: /mnt/music
    sports:
    # - name: sports1
    #   path: /mnt/sports
    books:
    # - name: books1
    #   path: /mnt/books

# Features to enable
features:
  downloading: true
  indexing: true
  media-management: true
  media-requests: true
  streaming: true
  tools: true
  dev: true
  o11y: true

# Infra applications
letsencrypt:
  acme:
    email:

cloudflare:
  email:
  apiToken:

# Services

## Media Downloading applications
transmission:
  enabled: false
  user:
  password:
  webHome: #Optional alternative web interface (needs to be manually installed inside transmission config folder and the value you gat is someting like /config/flood-for-transmission eg: https://github.com/johman10/flood-for-transmission)
  mediaTypes:
    - downloads

deluge:
  enabled: false
  mediaTypes:
    - downloads

qbittorrent:
  enabled: false
  mediaTypes:
    - downloads

sabnzbd:
  enabled: false
  mediaTypes:
    - downloads

## Media Indexing applications
jackett:
  enabled: true

prowlarr:
  enabled: true

nzbhydra2:
  enabled: true

## Media Management applications
radarr:
  enabled: true
  defaultEnabled: true
# languages: # Optional list of languages to create a Radarr instance for each language (radar-es for example)
#   - es
  mediaTypes:
    - movies
    - downloads

sonarr:
  enabled: true
  defaultEnabled: true
# languages: # Optional list of languages to create a Sonarr instance for each language (radar-es for example)
#   - es
  mediaTypes:
    - tv
    - downloads

bazarr:
  enabled: true
  mediaTypes:
    - movies
    - tv

lidarr:
  enabled: true
  mediaTypes:
    - music
    - downloads

readarr:
  enabled: true
  defaultEnabled: true
  # languages: # Optional list of languages to create a Radarr instance for each language (radar-es for example)
  #   - es
  mediaTypes:
    - books
    - downloads

calibre:
  enabled: true
  mediaTypes:
    - books

calibreweb:
  enabled: true
  mediaTypes:
    - books

jellyseerr:
  enabled: true
  defaultEnabled: true
# languages: # Optional list of languages to create a jellyseerr instance for each language (jellyseerr-es for example)
#   - es

overseerr:
  enabled: true
  defaultEnabled: true
# languages: # Optional list of languages to create an overseerr instance for each language (overseerr-es for example)
#   - es

## Media Streaming applications
emby:
  enabled: false
  # extraMediaLanguages: # Optional list of language suffixes to mount media volumes
  #   - es
  mediaTypes:
    - movies
    - tv
    - sports
    - music
    - downloads

jellyfin:
  enabled: true
# extraMediaLanguages: # Optional list of language suffixes to mount media volumes
#   - es
  mediaTypes:
    - movies
    - tv
    - sports
    - music
    - downloads

plex:
  enabled: true
  claim: # obtain in https://www.plex.tv/claim/
# extraMediaLanguages: # Optional list of language suffixes to mount media volumes
#   - es
  mediaTypes:
    - movies
    - tv
    - sports
    - music
    - downloads

synclounge:
  enabled: true
  # auth-list: plexuser1,plexuser2,email1,machineid1 # optional

tautulli:
  enabled: true

## Tools applications
kubernetes-dashboard:
  enabled: true

homarr:
  enabled: true
  encryption-key: something secure # you can use `openssl rand -hex 32` to generate

home-assistant:
  enabled: true

fileflows:
  enabled: true
  volumes:
    - name: storage
      hostPath:
        path: /storage
  volumeMounts:
    - name: storage
      mountPath: /storage

filebrowser:
  enabled: true
  root: /storage

flaresolverr:
  enabled: true

n8n:
  enabled: true

# DEV

docker-registry:
  enabled: false
  volumes:
    - name: storage
      hostPath:
        path: /storage
  volumeMounts:
    - name: storage
      mountPath: /storage

## Observability (o11y) applications
metrics-server:
  enabled: true

kube-prometheus-stack:
  enabled: true
  grafana:
    adminUser: "admin"
    adminPassword: # Password for the admin user

dash:
  enabled: true
  env:
    - name: DASHDOT_ENABLE_CPU_TEMPS
      value: "true"
    - name: DASHDOT_OVERRIDE_STORAGE_NAMES
      value: >-
        {
          "/dev/sda": "Main SSD",
          "/dev/sdb": "Media Drive",
          "/dev/sdc": "Backup",
          "/dev/sdd": "Game Drive",
          "/dev/sde": "External"
        }
